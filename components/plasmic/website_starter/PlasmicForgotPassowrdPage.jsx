/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7Btu5J2C2vcmf5tsuHc6dV
// Component: 0vDQaIBo3KmC
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicLink as PlasmicLink__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateStateOnChangeProp,
  generateStateValueProp,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import TextInput from "../../TextInput"; // plasmic-import: rOL53Ae4m72k/component
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7Btu5J2C2vcmf5tsuHc6dV/styleTokensProvider
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 7Btu5J2C2vcmf5tsuHc6dV/projectcss
import sty from "./PlasmicForgotPassowrdPage.module.css"; // plasmic-import: 0vDQaIBo3KmC/css
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: rmimX76DFuld/icon
import Vector10Icon from "./icons/PlasmicIcon__Vector10"; // plasmic-import: HR7OiVqxncdb/icon
import Vector3Icon from "./icons/PlasmicIcon__Vector3"; // plasmic-import: bpsLJ93ouDLv/icon
import Vector4Icon from "./icons/PlasmicIcon__Vector4"; // plasmic-import: wXPsmpnxCKz1/icon
import Vector5Icon from "./icons/PlasmicIcon__Vector5"; // plasmic-import: JcKhqLwyakHg/icon

createPlasmicElementProxy;

export const PlasmicForgotPassowrdPage__VariantProps = new Array();

export const PlasmicForgotPassowrdPage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicForgotPassowrdPage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const styleTokensClassNames = _useStyleTokens();
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          styleTokensClassNames,
          sty.root
        )}
      >
        <div
          data-plasmic-name={"forgotPassowrdPage"}
          data-plasmic-override={overrides.forgotPassowrdPage}
          className={classNames(projectcss.all, sty.forgotPassowrdPage)}
        >
          <VectorIcon
            className={classNames(projectcss.all, sty.svg__oOezB)}
            role={"img"}
          />

          <Vector10Icon
            className={classNames(projectcss.all, sty.svg__cVj5O)}
            role={"img"}
          />

          <Vector3Icon
            className={classNames(projectcss.all, sty.svg__hAy7T)}
            role={"img"}
          />

          <Vector4Icon
            className={classNames(projectcss.all, sty.svg__iscCo)}
            role={"img"}
          />

          <Vector5Icon
            className={classNames(projectcss.all, sty.svg__zomm7)}
            role={"img"}
          />

          <Vector5Icon
            className={classNames(projectcss.all, sty.svg__nZ69R)}
            role={"img"}
          />

          <div
            data-plasmic-name={"frame5"}
            data-plasmic-override={overrides.frame5}
            className={classNames(projectcss.all, sty.frame5)}
          >
            <div
              data-plasmic-name={"pleaseFillInYourEmailAddress"}
              data-plasmic-override={overrides.pleaseFillInYourEmailAddress}
              className={classNames(
                projectcss.all,
                sty.pleaseFillInYourEmailAddress
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__m1Lrc
                )}
              >
                {"Please fill in your Email Address"}
              </div>
            </div>
            <div
              data-plasmic-name={"frame10"}
              data-plasmic-override={overrides.frame10}
              className={classNames(projectcss.all, sty.frame10)}
            >
              <div
                data-plasmic-name={"frame9"}
                data-plasmic-override={overrides.frame9}
                className={classNames(projectcss.all, sty.frame9)}
              >
                <div
                  data-plasmic-name={"frame8"}
                  data-plasmic-override={overrides.frame8}
                  className={classNames(projectcss.all, sty.frame8)}
                >
                  <div
                    data-plasmic-name={"frame6"}
                    data-plasmic-override={overrides.frame6}
                    className={classNames(projectcss.all, sty.frame6)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eAluy
                      )}
                    >
                      {"Forgot Password?"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gnBw
                      )}
                    >
                      {"Don\u2019t Worry, We  Can Help"}
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <PlasmicLink__
              data-plasmic-name={"frame1"}
              data-plasmic-override={overrides.frame1}
              className={classNames(projectcss.all, projectcss.a, sty.frame1)}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zoUrN
                )}
              >
                {"Reset My Password"}
              </div>
            </PlasmicLink__>
            <PlasmicLink__
              data-plasmic-name={"frame4"}
              data-plasmic-override={overrides.frame4}
              className={classNames(projectcss.all, projectcss.a, sty.frame4)}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xwNZb
                )}
              >
                {"Login Now"}
              </div>
            </PlasmicLink__>
            <div
              data-plasmic-name={"frame11"}
              data-plasmic-override={overrides.frame11}
              className={classNames(projectcss.all, sty.frame11)}
            >
              <div
                data-plasmic-name={"rememberYourPassword"}
                data-plasmic-override={overrides.rememberYourPassword}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.rememberYourPassword
                )}
              >
                {"Remember Your Password? "}
              </div>
            </div>
            <TextInput
              data-plasmic-name={"textInput"}
              data-plasmic-override={overrides.textInput}
              className={classNames("__wab_instance", sty.textInput)}
              inputType={"email"}
              onChange={async (...eventArgs) => {
                generateStateOnChangeProp($state, ["textInput", "value"]).apply(
                  null,
                  eventArgs
                );
                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
              value={generateStateValueProp($state, ["textInput", "value"])}
            />
          </div>
          <div
            data-plasmic-name={"frame12"}
            data-plasmic-override={overrides.frame12}
            className={classNames(projectcss.all, sty.frame12)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uuczn
              )}
            >
              {"Welcome to \nIncome Tax AI"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___5QUq6
              )}
            >
              {"Create your account with ITAI"}
            </div>
          </div>
          <div
            data-plasmic-name={
              "\u62db\u8058\u77e2\u91cf\u63d2\u753b\u4eba\u7269\u573a\u666f\u63d2\u753b\u62db\u80581100924\u9ed1\u4e0e\u767d01Copy1"
            }
            data-plasmic-override={
              overrides.招聘矢量插画人物场景插画招聘1100924黑与白01Copy1
            }
            className={classNames(
              projectcss.all,
              sty.招聘矢量插画人物场景插画招聘1100924黑与白01Copy1
            )}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "forgotPassowrdPage",
    "frame5",
    "pleaseFillInYourEmailAddress",
    "frame10",
    "frame9",
    "frame8",
    "frame6",
    "frame1",
    "frame4",
    "frame11",
    "rememberYourPassword",
    "textInput",
    "frame12",
    "\u62db\u8058\u77e2\u91cf\u63d2\u753b\u4eba\u7269\u573a\u666f\u63d2\u753b\u62db\u80581100924\u9ed1\u4e0e\u767d01Copy1"
  ],

  forgotPassowrdPage: [
    "forgotPassowrdPage",
    "frame5",
    "pleaseFillInYourEmailAddress",
    "frame10",
    "frame9",
    "frame8",
    "frame6",
    "frame1",
    "frame4",
    "frame11",
    "rememberYourPassword",
    "textInput",
    "frame12",
    "\u62db\u8058\u77e2\u91cf\u63d2\u753b\u4eba\u7269\u573a\u666f\u63d2\u753b\u62db\u80581100924\u9ed1\u4e0e\u767d01Copy1"
  ],

  frame5: [
    "frame5",
    "pleaseFillInYourEmailAddress",
    "frame10",
    "frame9",
    "frame8",
    "frame6",
    "frame1",
    "frame4",
    "frame11",
    "rememberYourPassword",
    "textInput"
  ],

  pleaseFillInYourEmailAddress: ["pleaseFillInYourEmailAddress"],
  frame10: ["frame10", "frame9", "frame8", "frame6"],
  frame9: ["frame9", "frame8", "frame6"],
  frame8: ["frame8", "frame6"],
  frame6: ["frame6"],
  frame1: ["frame1"],
  frame4: ["frame4"],
  frame11: ["frame11", "rememberYourPassword"],
  rememberYourPassword: ["rememberYourPassword"],
  textInput: ["textInput"],
  frame12: ["frame12"],
  招聘矢量插画人物场景插画招聘1100924黑与白01Copy1: [
    "\u62db\u8058\u77e2\u91cf\u63d2\u753b\u4eba\u7269\u573a\u666f\u63d2\u753b\u62db\u80581100924\u9ed1\u4e0e\u767d01Copy1"
  ]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicForgotPassowrdPage__ArgProps,
          internalVariantPropNames: PlasmicForgotPassowrdPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicForgotPassowrdPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicForgotPassowrdPage";
  } else {
    func.displayName = `PlasmicForgotPassowrdPage.${nodeName}`;
  }
  return func;
}

export const PlasmicForgotPassowrdPage = Object.assign(
  // Top-level PlasmicForgotPassowrdPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    forgotPassowrdPage: makeNodeComponent("forgotPassowrdPage"),
    frame5: makeNodeComponent("frame5"),
    pleaseFillInYourEmailAddress: makeNodeComponent(
      "pleaseFillInYourEmailAddress"
    ),
    frame10: makeNodeComponent("frame10"),
    frame9: makeNodeComponent("frame9"),
    frame8: makeNodeComponent("frame8"),
    frame6: makeNodeComponent("frame6"),
    frame1: makeNodeComponent("frame1"),
    frame4: makeNodeComponent("frame4"),
    frame11: makeNodeComponent("frame11"),
    rememberYourPassword: makeNodeComponent("rememberYourPassword"),
    textInput: makeNodeComponent("textInput"),
    frame12: makeNodeComponent("frame12"),
    招聘矢量插画人物场景插画招聘1100924黑与白01Copy1: makeNodeComponent(
      "\u62db\u8058\u77e2\u91cf\u63d2\u753b\u4eba\u7269\u573a\u666f\u63d2\u753b\u62db\u80581100924\u9ed1\u4e0e\u767d01Copy1"
    ),
    // Metadata about props expected for PlasmicForgotPassowrdPage
    internalVariantProps: PlasmicForgotPassowrdPage__VariantProps,
    internalArgProps: PlasmicForgotPassowrdPage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicForgotPassowrdPage;
/* prettier-ignore-end */
